//-----------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by the C# SDK Code Generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------------


using System;
using System.Collections.Generic;
using System.Linq;
using UnityEngine.Scripting;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Unity.Services.Core.Environments.Client.Http;



namespace Unity.Services.Core.Environments.Client.Models
{
    /// <summary>
    /// InlineResponse2006 model
    /// </summary>
    [Preserve]
    [DataContract(Name = "inline_response_200_6")]
    internal class InlineResponse2006
    {
        /// <summary>
        /// Creates an instance of InlineResponse2006.
        /// </summary>
        /// <param name="permissions">List of RBAC permissions</param>
        /// <param name="resourceType">Type of the resource for which the permissions are returned</param>
        /// <param name="resourceId">UUID of the resource for which the permissions are returned</param>
        /// <param name="userId">UUID of the user whose permissions are returned</param>
        [Preserve]
        public InlineResponse2006(List<string> permissions = default, string resourceType = default, System.Guid resourceId = default, System.Guid userId = default)
        {
            Permissions = permissions;
            ResourceType = resourceType;
            ResourceId = resourceId;
            UserId = userId;
        }

        /// <summary>
        /// List of RBAC permissions
        /// </summary>
        [Preserve]
        [DataMember(Name = "permissions", EmitDefaultValue = false)]
        public List<string> Permissions{ get; }
        
        /// <summary>
        /// Type of the resource for which the permissions are returned
        /// </summary>
        [Preserve]
        [DataMember(Name = "resourceType", EmitDefaultValue = false)]
        public string ResourceType{ get; }
        
        /// <summary>
        /// UUID of the resource for which the permissions are returned
        /// </summary>
        [Preserve]
        [DataMember(Name = "resourceId", EmitDefaultValue = false)]
        public System.Guid ResourceId{ get; }
        
        /// <summary>
        /// UUID of the user whose permissions are returned
        /// </summary>
        [Preserve]
        [DataMember(Name = "userId", EmitDefaultValue = false)]
        public System.Guid UserId{ get; }
    
        /// <summary>
        /// Formats a InlineResponse2006 into a string of key-value pairs for use as a path parameter.
        /// </summary>
        /// <returns>Returns a string representation of the key-value pairs.</returns>
        internal string SerializeAsPathParam()
        {
            var serializedModel = "";

            if (Permissions != null)
            {
                serializedModel += "permissions," + Permissions.ToString() + ",";
            }
            if (ResourceType != null)
            {
                serializedModel += "resourceType," + ResourceType + ",";
            }
            if (ResourceId != null)
            {
                serializedModel += "resourceId," + ResourceId + ",";
            }
            if (UserId != null)
            {
                serializedModel += "userId," + UserId;
            }
            return serializedModel;
        }

        /// <summary>
        /// Returns a InlineResponse2006 as a dictionary of key-value pairs for use as a query parameter.
        /// </summary>
        /// <returns>Returns a dictionary of string key-value pairs.</returns>
        internal Dictionary<string, string> GetAsQueryParam()
        {
            var dictionary = new Dictionary<string, string>();

            if (Permissions != null)
            {
                var permissionsStringValue = Permissions.ToString();
                dictionary.Add("permissions", permissionsStringValue);
            }
            
            if (ResourceType != null)
            {
                var resourceTypeStringValue = ResourceType.ToString();
                dictionary.Add("resourceType", resourceTypeStringValue);
            }
            
            if (ResourceId != null)
            {
                var resourceIdStringValue = ResourceId.ToString();
                dictionary.Add("resourceId", resourceIdStringValue);
            }
            
            if (UserId != null)
            {
                var userIdStringValue = UserId.ToString();
                dictionary.Add("userId", userIdStringValue);
            }
            
            return dictionary;
        }
    }
}
