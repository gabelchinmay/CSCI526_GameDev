// This file is generated. Do not modify by hand.
// XML documentation file not found. To check if public methods have XML comments,
// make sure the XML doc file is present and located next to the scraped dll
namespace Unity.Services.Core.Editor.Environments
{
    public struct EnvironmentInfo
    {
        [Newtonsoft.Json.JsonProperty(@"id")] public readonly System.Guid Id;
        [Newtonsoft.Json.JsonProperty(@"isDefault")] public readonly bool IsDefault;
        [Newtonsoft.Json.JsonProperty(@"name")] public readonly string Name;
        public EnvironmentInfo(string name, System.Guid id, bool isDefault) {}
    }

    public class EnvironmentNotFoundException : System.Exception
    {
        public EnvironmentNotFoundException(string message) {}
    }

    public static class EnvironmentsApi
    {
        public static IEnvironmentsApi Instance { get; }
    }

    public interface IEnvironmentsApi : System.ComponentModel.INotifyPropertyChanged
    {
        public System.Nullable<System.Guid> ActiveEnvironmentId { get; }
        public string ActiveEnvironmentName { get; }
        public System.Collections.Generic.IReadOnlyCollection<EnvironmentInfo> Environments { get; }
        public System.Threading.Tasks.Task RefreshAsync();
        public void SetActiveEnvironment(System.Guid environmentGuid);
        public void SetActiveEnvironment(string environmentName);
        public void SetActiveEnvironment(EnvironmentInfo environmentInfo);
        public System.Threading.Tasks.Task<ValidationResult> ValidateEnvironmentAsync();
    }

    public sealed class ValidationResult
    {
        public string ErrorMessage { get; }
        public bool Failed { get; }
        public ValidationResult() {}
        public ValidationResult(string errorMessage) {}
    }
}

namespace Unity.Services.Core.Editor.Environments.UI
{
    public class EnvironmentView : UnityEngine.UIElements.VisualElement
    {
        public EnvironmentView() {}
        public void Bind(IEnvironmentsApi environmentService);
    }
}
